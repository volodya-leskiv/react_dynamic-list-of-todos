{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","prepareForFilterTodos","todos","selectIdOfUser","useState","title","setTitle","selectedValue","setSelectedValue","filteredTodos","filter","todo","includes","className","type","value","placeholder","onChange","event","target","completed","map","classNames","readOnly","checked","onClick","userId","id","CurrentUser","selectedUserId","user","setUser","useEffect","fetch","then","response","json","getUsers","userFromServer","name","email","phone","App","setSelectedUserId","setTodos","fetchedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cc10751.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[]\n  selectIdOfUser: (userId: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectIdOfUser }) => {\n  const [title, setTitle] = useState('');\n  const [selectedValue, setSelectedValue] = useState('');\n  const filteredTodos = todos.filter(todo => todo.title.includes(title));\n\n  function filter(prepareForFilterTodos: Todo[]): Todo[] {\n    if (selectedValue === 'completed') {\n      return prepareForFilterTodos.filter(todo => todo.completed);\n    }\n\n    if (selectedValue === 'active') {\n      return prepareForFilterTodos.filter(todo => !todo.completed);\n    }\n\n    return prepareForFilterTodos;\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"TodoList__list-container\">\n        <h4>Filter by title</h4>\n        <input\n          data-cy=\"filterByTitle\"\n          type=\"text\"\n          value={title}\n          className=\"TodoList__input\"\n          placeholder=\"Enter a title\"\n          onChange={(event) => {\n            setTitle(event.target.value);\n          }}\n\n        />\n        <h4> Status:</h4>\n        <select\n          className=\"TodoList__input TodoList__input \"\n          onChange={(event) => {\n            setSelectedValue(event.target.value);\n          }}\n        >\n          <option value=\"all\"> All </option>\n          <option value=\"active\">Active </option>\n          <option value=\"completed\">Completed </option>\n        </select>\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {filter(filteredTodos).map(todo => (\n            <li\n              key={todo.id}\n              className={classNames(\n                'TodoList__item',\n                {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                },\n              )}\n            >\n              <label>\n                <input type=\"checkbox\" readOnly checked={todo.completed} />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                data-cy=\"userButton\"\n                className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                type=\"button\"\n                onClick={() => {\n                  selectIdOfUser(todo.userId);\n                }}\n              >\n                {`User# ${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './CurrentUser.scss';\nimport { getUsers } from '../../api';\n\ntype Props = {\n  selectedUserId:number\n  selectIdOfUser: (userId: number) => void\n};\n\n// eslint-disable-next-line max-len\nexport const CurrentUser: React.FC<Props> = ({ selectedUserId, selectIdOfUser }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUsers(selectedUserId)\n      .then(userFromServer => setUser(userFromServer));\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      {user\n        ? (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>{`Selected User: ${user.id}`}</span>\n            </h2>\n\n            {/* eslint-disable-next-line max-len */}\n            <h3 className=\"CurrentUser__name\" data-cy=\"userName\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </>\n        )\n        : (\n          'Please wait'\n        )}\n      <button\n        type=\"button\"\n        className=\"button is-danger\"\n        onClick={() => {\n          selectIdOfUser(0);\n        }}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","const apiUrlTodos = 'https://mate.academy/students-api/todos';\nconst apiUrlUsers = 'https://mate.academy/students-api/users';\n\nexport const getTodos = ():Promise<Todo[]> => {\n  return fetch(apiUrlTodos)\n    .then(response => response.json());\n};\n\nexport const getUsers = (selectedUserId: number):Promise<User> => {\n  return fetch(`${apiUrlUsers}/${selectedUserId}`)\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const selectIdOfUser = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(fetchedTodos => setTodos(fetchedTodos));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList todos={todos} selectIdOfUser={selectIdOfUser} />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            // eslint-disable-next-line max-len\n            <CurrentUser selectedUserId={selectedUserId} selectIdOfUser={selectIdOfUser} />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}